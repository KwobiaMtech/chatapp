import { useUser, getAccessToken, getSession} from '@auth0/nextjs-auth0'
import Head from 'next/head'
import Link from 'next/link'
import styles from '../styles/Home.module.css'
import React, { useEffect, useState } from 'react';
import io from 'socket.io-client';

export default function Home({user, token}) {
  //const [socket, setSocket] = useState(null);
  const [onlineUsers, setOnlineUsers] = useState([]);
  const socket = io(`http://localhost:4000`, {
        extraHeaders: {
        Authorization: token
      }
  });

  useEffect(() => {}, []);

  socket.on('online-users', function(users){
    console.log('get online users', users[0]);
    setOnlineUsers(users);
  })

  socket.on('receivedMessage', function(message){
    console.log('get online users', users[0]);
    setOnlineUsers(users);
  })


  if(onlineUsers){
    socket.emit('sendMessage',{
      message: 'hello how are you',
      receiver:onlineUsers[0]  
    });
  }
  



 


  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>

        <nav>

        {
          !user && (
            <Link href="/api/auth/login">
              <a>Login</a>
            </Link>
          )
        }

          {
           user && (
             // eslint-disable-next-line @next/next/no-img-element
             <>
              <img src={user.picture} alt={user.name}/>
              <Link href="/api/auth/logout">
                <a>Logout</a>
              </Link>
             
             </>
            
          )
        }    
        </nav>
       
      </main>

    
    </div>
  )
}

export async function getServerSideProps({ req, res }) {
  const session = getSession(req, res);
  console.log('get session', session);
   if (!session || !session.user) {
    res.writeHead(302, {
      Location: '/api/auth/login',
    })
    res.end()
    return
  }
  const user = session.user;
  const token = session.accessToken;
  const url = 'http://localhost:4000/api/menu/items';
  const response = await fetch(url, {
    headers: {
      authorization: `Bearer ${session.accessToken}`,
    },
  });
  console.log('response', await response.json())
  return { props: {user, token} }
}
